{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\squar\\\\OneDrive\\\\\\u684C\\u9762\\\\react_project\\\\buyease\\\\client\\\\src\\\\SendEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendEmail = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [content, setContent] = useState('');\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    generatePassword(); // Automatically generate password on component mount\n  }, []);\n  const handleSendEmail = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/send-email', {\n        email,\n        content,\n        header: 'testing header'\n      });\n      alert(response.data); // Show success message\n      navigate('/'); // Redirect to the root path\n    } catch (error) {\n      alert('Error sending email: ' + error.message);\n    }\n  };\n  const generatePassword = () => {\n    const length = 8;\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * charset.length);\n      password += charset[randomIndex];\n    }\n    setGeneratedPassword(password); // Update the generated password state\n  };\n  const generatecontent = () => {\n    const content = \"Your Password is \";\n    setContent(content);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Send Test Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter target email\",\n      value: generatecontent,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter email content\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Generated Password\",\n      value: generatedPassword,\n      readOnly: true // Make this input read-only\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendEmail,\n      children: \"Send Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SendEmail, \"1UO1EKN94nvF5Tnc5DDBo5Yhv3o=\", false, function () {\n  return [useNavigate];\n});\n_c = SendEmail;\nexport default SendEmail;\nvar _c;\n$RefreshReg$(_c, \"SendEmail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","SendEmail","_s","email","setEmail","content","setContent","generatedPassword","setGeneratedPassword","navigate","generatePassword","handleSendEmail","response","post","header","alert","data","error","message","length","charset","password","i","randomIndex","Math","floor","random","generatecontent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/squar/OneDrive/桌面/react_project/buyease/client/src/SendEmail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SendEmail = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [generatedPassword, setGeneratedPassword] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        generatePassword(); // Automatically generate password on component mount\r\n    }, []);\r\n\r\n    const handleSendEmail = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/send-email', {\r\n                email,\r\n                content,\r\n                header: 'testing header',\r\n            });\r\n            alert(response.data); // Show success message\r\n            navigate('/'); // Redirect to the root path\r\n        } catch (error) {\r\n            alert('Error sending email: ' + error.message);\r\n        }\r\n    };\r\n\r\n    const generatePassword = () => {\r\n        const length = 8;\r\n        const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n        let password = '';\r\n        for (let i = 0; i < length; i++) {\r\n            const randomIndex = Math.floor(Math.random() * charset.length);\r\n            password += charset[randomIndex];\r\n        }\r\n        setGeneratedPassword(password); // Update the generated password state\r\n    };\r\n\r\n     const generatecontent = () => {\r\n        const content = \"Your Password is \";\r\n        setContent(content);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Send Test Email</h1>\r\n            <input\r\n                type=\"email\"\r\n                placeholder=\"Enter target email\"\r\n                value={generatecontent}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <textarea\r\n                placeholder=\"Enter email content\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n            />\r\n            \r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Generated Password\"\r\n                value={generatedPassword}\r\n                readOnly // Make this input read-only\r\n            />\r\n            <button onClick={handleSendEmail}>Send Email</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendEmail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}