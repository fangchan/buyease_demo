{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\squar\\\\OneDrive\\\\\\u684C\\u9762\\\\react_project\\\\buyease\\\\client\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useTranslation } from 'react-i18next'; // Import useTranslation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const {\n    t\n  } = useTranslation(); // Use the translation hook\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [content, setContent] = useState('');\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const [role, setRole] = useState('buyer'); // Default role\n  const navigate = useNavigate();\n  useEffect(() => {\n    generatePassword(); // Automatically generate password on component mount\n  }, []);\n  const generatePassword = () => {\n    const length = 8;\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * charset.length);\n      password += charset[randomIndex];\n    }\n    setGeneratedPassword(password); // Update the generated password state     \n    setContent(`Your Password is ${password}`); // Set initial content with password\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post('http://localhost:5000/signup', {\n        username,\n        password,\n        role\n      });\n      alert(t('User created!')); // Use translation for alerts\n    } catch (error) {\n      alert(t('Signup failed: ') + error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: t('Username'),\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: t('Password'),\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter target email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Enter email content\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Generated Password\",\n      value: generatedPassword,\n      readOnly: true // Make this input read-only\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: role,\n      onChange: e => setRole(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"admin\",\n        children: t('Admin')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"shopuser\",\n        children: t('Shop User')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"buyer\",\n        children: t('Buyer')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: t('Sign Up')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"0vnQZ4p5JJUpBCrhvSqISoavdA0=\", true, function () {\n  return [useTranslation];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","useTranslation","jsxDEV","_jsxDEV","Signup","_s","t","username","setUsername","password","setPassword","email","setEmail","content","setContent","generatedPassword","setGeneratedPassword","role","setRole","navigate","useNavigate","useEffect","generatePassword","length","charset","i","randomIndex","Math","floor","random","handleSubmit","e","preventDefault","post","alert","error","response","data","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/squar/OneDrive/桌面/react_project/buyease/client/src/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useTranslation } from 'react-i18next'; // Import useTranslation\r\n\r\nconst Signup = () => {\r\n    const { t } = useTranslation(); // Use the translation hook\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [content, setContent] = useState('');\r\n    const [generatedPassword, setGeneratedPassword] = useState('');\r\n    const [role, setRole] = useState('buyer'); // Default role\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        generatePassword(); // Automatically generate password on component mount\r\n    }, []);\r\n    const generatePassword = () => {\r\n        const length = 8;\r\n        const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n        let password = '';\r\n        for (let i = 0; i < length; i++) {\r\n            const randomIndex = Math.floor(Math.random() * charset.length);\r\n            password += charset[randomIndex];\r\n        }\r\n        setGeneratedPassword(password); // Update the generated password state     \r\n        setContent(`Your Password is ${password}`); // Set initial content with password\r\n    };  \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            await axios.post('http://localhost:5000/signup', { username, password, role });\r\n            alert(t('User created!')); // Use translation for alerts\r\n        } catch (error) {\r\n            alert(t('Signup failed: ') + error.response.data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder={t('Username')}\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                placeholder={t('Password')}\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n             <input\r\n                type=\"email\"\r\n                placeholder=\"Enter target email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <textarea\r\n                placeholder=\"Enter email content\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Generated Password\"\r\n                value={generatedPassword}\r\n                readOnly // Make this input read-only\r\n            />\r\n            <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                <option value=\"admin\">{t('Admin')}</option>\r\n                <option value=\"shopuser\">{t('Shop User')}</option>\r\n                <option value=\"buyer\">{t('Buyer')}</option>\r\n            </select>\r\n            <button type=\"submit\">{t('Sign Up')}</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}