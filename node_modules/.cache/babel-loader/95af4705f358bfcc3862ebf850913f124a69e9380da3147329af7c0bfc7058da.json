{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\squar\\\\OneDrive\\\\\\u684C\\u9762\\\\react_project\\\\buyease\\\\client\\\\src\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next'; // Import useTranslation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignupAndSendEmail = () => {\n  _s();\n  const {\n    t\n  } = useTranslation(); // Use the translation hook\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [role, setRole] = useState('buyer'); // Default role\n  const [email, setEmail] = useState('');\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    generatePassword(); // Automatically generate password on component mount\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // First, sign up the user\n      await axios.post('http://localhost:5000/signup', {\n        username,\n        password,\n        role,\n        email\n      });\n      alert(t('User created!')); // Use translation for alerts\n\n      // Then, send the email with the generated password\n      const content = `Your Password is ${generatedPassword}`; // Set email content\n      await axios.post('http://localhost:5000/send-email', {\n        email,\n        content,\n        header: 'Welcome!'\n      });\n      alert(t('Email sent successfully!')); // Success message for email\n      navigate('/'); // Redirect to the root path\n    } catch (error) {\n      var _error$response;\n      alert(t('Signup failed: ') + ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  const generatePassword = () => {\n    const length = 8;\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      const randomIndex = Math.floor(Math.random() * charset.length);\n      password += charset[randomIndex];\n    }\n    setGeneratedPassword(password); // Update the generated password state     \n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t('Signup and Send Email')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: t('Username'),\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: t('Password'),\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: t('Email'),\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: role,\n        onChange: e => setRole(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: t('Admin')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"shopuser\",\n          children: t('Shop User')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"buyer\",\n          children: t('Buyer')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: t('Sign Up and Send Email')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: t('Generated Password'),\n        value: generatedPassword,\n        readOnly: true // Make this input read-only\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(SignupAndSendEmail, \"Uj/3YCq4QL8LzY/dWhro+oVD3rY=\", false, function () {\n  return [useTranslation, useNavigate];\n});\n_c = SignupAndSendEmail;\nexport default SignupAndSendEmail;\nvar _c;\n$RefreshReg$(_c, \"SignupAndSendEmail\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useTranslation","jsxDEV","_jsxDEV","SignupAndSendEmail","_s","t","username","setUsername","password","setPassword","role","setRole","email","setEmail","generatedPassword","setGeneratedPassword","navigate","generatePassword","handleSubmit","e","preventDefault","post","alert","content","header","error","_error$response","response","data","message","length","charset","i","randomIndex","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/squar/OneDrive/桌面/react_project/buyease/client/src/Signup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useTranslation } from 'react-i18next'; // Import useTranslation\r\n\r\nconst SignupAndSendEmail = () => {\r\n    const { t } = useTranslation(); // Use the translation hook\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('buyer'); // Default role\r\n    const [email, setEmail] = useState('');\r\n    const [generatedPassword, setGeneratedPassword] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        generatePassword(); // Automatically generate password on component mount\r\n    }, []);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // First, sign up the user\r\n            await axios.post('http://localhost:5000/signup', { username, password, role, email });\r\n            alert(t('User created!')); // Use translation for alerts\r\n\r\n            // Then, send the email with the generated password\r\n            const content = `Your Password is ${generatedPassword}`; // Set email content\r\n            await axios.post('http://localhost:5000/send-email', {\r\n                email,\r\n                content,\r\n                header: 'Welcome!',\r\n            });\r\n            alert(t('Email sent successfully!')); // Success message for email\r\n            navigate('/'); // Redirect to the root path\r\n        } catch (error) {\r\n            alert(t('Signup failed: ') + error.response?.data || error.message);\r\n        }\r\n    };\r\n\r\n    const generatePassword = () => {\r\n        const length = 8;\r\n        const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n        let password = '';\r\n        for (let i = 0; i < length; i++) {\r\n            const randomIndex = Math.floor(Math.random() * charset.length);\r\n            password += charset[randomIndex];\r\n        }\r\n        setGeneratedPassword(password); // Update the generated password state     \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>{t('Signup and Send Email')}</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={t('Username')}\r\n                    value={username}\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder={t('Password')}\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder={t('Email')}\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <select value={role} onChange={(e) => setRole(e.target.value)}>\r\n                    <option value=\"admin\">{t('Admin')}</option>\r\n                    <option value=\"shopuser\">{t('Shop User')}</option>\r\n                    <option value=\"buyer\">{t('Buyer')}</option>\r\n                </select>\r\n                <button type=\"submit\">{t('Sign Up and Send Email')}</button>\r\n                <input\r\n                type=\"text\"\r\n                placeholder={t('Generated Password')}\r\n                value={generatedPassword}\r\n                readOnly // Make this input read-only\r\n            />\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignupAndSendEmail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}